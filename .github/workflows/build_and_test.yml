name: Build and Test

on: [push]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Install package dependencies
        run: |
          sudo apt install -y build-essential cmake
          sudo apt install -y libevdev-dev

      - name: Build and install tcl 9
        run: |
          git clone --depth=1 --branch core-9-0-1-rc https://github.com/tcltk/tcl.git
          cd tcl/unix/
          ./configure
          make
          sudo make install
          sudo ldconfig

      - name: Build and install jansson static lib
        run: |
          git clone https://github.com/akheron/jansson.git
          cd jansson/
          git checkout v2.14
          mkdir build/
          cd build/
          cmake ..
          make
          sudo make install

      - name: Check out our code
        uses: actions/checkout@v4
  
      - name: cmake and make
        run: |
          mkdir build/
          cd build/
          cmake ..
          make

      - name: Obtain dlsh (for test scripts to use)
        run: |
          mkdir dlsh/
          cd dlsh/
          wget https://sheinberglab.org/dserv/dlsh.zip

      - name: ctest
        run: |
          cd build/
          ctest -VV --timeout 10 ..

  release:

    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build

    steps:

      - name: Install to a local subdir
        run: |
          cd build/
          cmake -DCMAKE_INSTALL_PREFIX=./package/usr/local ..
          cmake --build .
          cmake --install .

      - name: Add dlsh to the install subdir
        run: |
          mkdir ./build/package/usr/local/dlsh/
          cp ./dlsh/dlsh.zip ./build/package/usr/local/dlsh/

      - name: Create Debian control file
        run: |
          mkdir -p ./build/package/DEBIAN
          echo "Package: dserv" > ./build/package/DEBIAN/control
          echo "Description: Data server system for data acquisition and control" >> ./build/package/DEBIAN/control
          echo "Maintainer: Sheinberg Lab" >> ./build/package/DEBIAN/control
          echo "Version: ${{ github.ref_name }}" >> ./build/package/DEBIAN/control
          echo "Architecture: amd64" >> ./build/package/DEBIAN/control
          echo "Depends: libevdev2, libpq5" >> ./build/package/DEBIAN/control

      - name: Create postinst script
        run: |
          echo '#!/bin/sh' > ./build/package/DEBIAN/postinst
          echo "set -e" >> ./build/package/DEBIAN/postinst
          echo "cp /usr/local/dserv/systemd/dserv.service /etc/systemd/system" >> ./build/package/DEBIAN/postinst
          echo "systemctl daemon-reload" >> ./build/package/DEBIAN/postinst
          echo "systemctl enable dserv" >> ./build/package/DEBIAN/postinst
          echo "systemctl start dserv" >> ./build/package/DEBIAN/postinst
          chmod +x ./build/package/DEBIAN/postinst

      - name: Create Debian package
        run: |
          dpkg-deb --build ./build/package dserv-${{ github.ref_name }}.deb
          ls -alth
